package ru.masterdm.km.dao;

import java.util.ArrayList;
import java.util.List;

import ru.masterdm.km.common.entity.ContractorInstance;
import ru.masterdm.km.common.entity.KmEventInstance;
import ru.masterdm.km.common.searchfilter.EventsByContractorFilter;
import ru.masterdm.km.dao.mapper.ContractorInstanceRm;
import ru.masterdm.km.dao.mapper.KmEventInstanceRm;
import ru.masterdm.km.util.BaseJdbcDao;

/**
 * Реализация DAO интерфейса для сущности "Контрагент".
 * 
 * @author Shafigullin Ildar
 */
public class ContractorDaoImpl extends BaseJdbcDao<ContractorDaoSqlKey> implements ContractorDao {

	@Override
	public List<KmEventInstance> getContractorCalendar(int startIndex, int amount, String contractorID) {
		String query = sql.getValue(ContractorDaoSqlKey.CONTRACTOR_CALENDAR);
		query += " ) v where v.rn > ? and v.rn <= ? ";
		return queryForList(query, new KmEventInstanceRm(), "Error getContractorCalendar.", contractorID, startIndex, startIndex + amount);
	}

	@Override
	public int getContractorCalendarCount(String contractorID) {
		String query = sql.getValue(ContractorDaoSqlKey.CONTRACTOR_CALENDAR_COUNT);
		return queryForInt(query, "Error selecting Contractor Calendar count.", contractorID);

	}

	@Override
	public int getInstanceCount(EventsByContractorFilter filter) {
		String query = sql.getValue(ContractorDaoSqlKey.CONTRACTOR_INSTANCE_COUNT);
		ArrayList<Object> params = new ArrayList<Object>();
		query = filterQuery(filter, query, params);
		return queryForInt(query, "Error selecting contractor instance count.", params.toArray());
	}

	@Override
	public List<ContractorInstance> getInstances(int startIndex, int amount, EventsByContractorFilter filter) {
		String query = sql.getValue(ContractorDaoSqlKey.CONTRACTOR_INSTANCES);
		ArrayList<Object> params = new ArrayList<Object>();
		query = filterQuery(filter, query, params);
		return queryForList(query, new ContractorInstanceRm(), "Error selecting contractor instances.", params.toArray());

	}

	private String filterQuery(EventsByContractorFilter filter, String query, ArrayList<Object> params) {
		if (filter.getContractor() != null) {
			query += " AND o.id_org = ? ";
			params.add(filter.getContractor().getId());
		}
		return query;
	}
}

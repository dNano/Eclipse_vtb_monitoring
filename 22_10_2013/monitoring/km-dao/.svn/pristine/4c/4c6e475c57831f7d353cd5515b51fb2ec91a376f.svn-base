package ru.masterdm.km.dao;

import static ru.masterdm.km.dao.EventDaoSqlKey.EVENT_INSTANCES;
import static ru.masterdm.km.dao.EventDaoSqlKey.EVENT_INSTANCE_COUNT;

import java.util.List;

import ru.masterdm.km.common.entity.EventResult;
import ru.masterdm.km.common.entity.KmEventInstance;
import ru.masterdm.km.common.searchfilter.EventsByDateFilter;
import ru.masterdm.km.dao.mapper.KmEventInstanceRm;
import ru.masterdm.km.dao.mapper.KmEventResultRm;
import ru.masterdm.km.util.BaseJdbcDao;

/**
 * 
 * @author Alexey Chalov
 */
public class EventDaoImpl extends BaseJdbcDao<EventDaoSqlKey> implements EventDao {

	@Override
	public int getInstanceCount(EventsByDateFilter filter) {
		String query = sql.getValue(EVENT_INSTANCE_COUNT);
		return queryForInt(query, "Error selecting event instance count.");
	}

	@Override
	public List<KmEventInstance> getInstances(int startIndex, int amount, EventsByDateFilter filter) {
		String query = sql.getValue(EVENT_INSTANCES);
		// TODO filter
		query += " ) v where v.rn > ? and v.rn <= ? ";
		return queryForList(query, new KmEventInstanceRm(), "Error selecting event instances.", startIndex, startIndex + amount);
	}

	@Override
	public KmEventInstance getEventForExecute(long eventID) {
		String query = sql.getValue(EventDaoSqlKey.EVENT_FOR_EXECUTE);
		return queryForObject(query, new KmEventInstanceRm(), "Error in getEventForExecute", eventID);
	}

	@Override
	public List<EventResult> getEventResults() {
		String query = sql.getValue(EventDaoSqlKey.EVENT_RESULTS);
		return queryForList(query, new KmEventResultRm(), "Error selecting event results.");
	}
}
